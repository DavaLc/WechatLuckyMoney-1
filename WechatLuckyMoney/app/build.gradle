apply plugin: 'com.android.application'



android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.max.wechatluckymoney"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        flavorDimensions rootProject.ext.flavorDimensions
        versionCode 1
        versionName "1.0"

        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "x86"
//            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    signingConfigs {
        config {
            storePassword "LuckyMoney"
            keyAlias "Money"
            keyPassword "LuckyMoney"
            storeFile file('../build_system/LuckyMoney.jks')
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            buildConfigField "boolean", "LOG_DEBUG", "false" // 不显示Log
            debuggable false
            jniDebuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            versionNameSuffix "_debug"
            debuggable true
            jniDebuggable true
            buildConfigField "boolean", "LOG_DEBUG", "true"          // 显示Log
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }

        applicationVariants.all { variant ->
            variant.outputs.all { output ->  // each 改为 all
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    // apk_渠道名-版本号-版本名称-编译时间.apk    //
                    def fileName = "lucky_money_${defaultConfig.versionCode}_V${defaultConfig.versionName}_${releaseTime()}_${variant.buildType.name}.apk"
                    outputFileName = fileName;
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    //LOG日志
    implementation 'com.orhanobut:logger:2.1.1'
    implementation "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    // ButterKnife注解库：https://github.com/JakeWharton/butterknife
    implementation "com.jakewharton:butterknife:$rootProject.ext.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.butterknifeVersion"
    //loading https://github.com/81813780/AVLoadingIndicatorView
    implementation project(':loadingIndicator')

//     权限请求框架：https://github.com/getActivity/XXPermissions
    api 'com.hjq:xxpermissions:5.2'


    implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.0.1
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
}

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+08:00"))
}
